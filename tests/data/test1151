<testcase>
<info>
<keywords>
HTTP
HTTP GET
cookies
</keywords>
</info>

# Server-side
<reply>

# reject cookies with too long name (instead of capping)
# 3000 bytes name + 1096 bytes content is fine
# 3000 bytes name + 1097 bytes content is NOT OK
# 4096 bytes name + 1 byte content is NOT OK
# 4094 bytes name + 1 byte content is fine
<data>
HTTP/1.1 200 OK
Date: Tue, 09 Nov 2010 14:49:00 GMT
Server: test-server/fake
Content-Type: text/html
Funny-head: yesyes swsclose
Set-Cookie: foobar=name; domain=127.0.0.1; path=/;
Set-Cookie: %repeat[3000 x A]%=%repeat[1096 x B]%; domain=127.0.0.1; path=/;
Set-Cookie: %repeat[3000 x C]%=%repeat[1097 x B]%; domain=127.0.0.1; path=/;
Set-Cookie: %repeat[4096 x D]%=E; domain=127.0.0.1; path=/;
Set-Cookie: %repeat[4094 x F]%=E; domain=127.0.0.1; path=/;

</data>
</reply>

# Client-side
<client>
<server>
http
</server>
<name>
HTTP with too long cookies
</name>
<command>
http://%HOSTIP:%HTTPPORT/%TESTNUMBER -c %LOGDIR/cookies%TESTNUMBER.txt
</command>
<features>
cookies
</features>
</client>

# Verify data after the test has been "shot"
<verify>
<protocol>
GET /%TESTNUMBER HTTP/1.1
Host: %HOSTIP:%HTTPPORT
User-Agent: curl/%VERSION
Accept: */*

</protocol>
<file name="%LOGDIR/cookies%TESTNUMBER.txt" mode="text">
# Netscape HTTP Cookie File
# https://curl.se/docs/http-cookies.html
# This file was generated by libcurl! Edit at your own risk.

127.0.0.1	FALSE	/	FALSE	0	%repeat[4094 x F]%	E
127.0.0.1	FALSE	/	FALSE	0	%repeat[3000 x A]%	%repeat[1096 x B]%
127.0.0.1	FALSE	/	FALSE	0	foobar	name
</file>
</verify>
</testcase>
