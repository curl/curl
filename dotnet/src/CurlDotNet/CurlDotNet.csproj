<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('Windows'))">netstandard2.0;net48;net6.0;net8.0</TargetFrameworks>
    <TargetFrameworks Condition="!$([MSBuild]::IsOSPlatform('Windows'))">netstandard2.0;net6.0;net8.0</TargetFrameworks>
    <LangVersion>8.0</LangVersion>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <!-- Package Metadata -->
    <PackageId>CurlDotNet</PackageId>
    <Version>1.0.0</Version>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>

    <!-- Authors and Sponsorship -->
    <Authors>Jacob Mellor;IronSoftware</Authors>
    <Company>IronSoftware</Company>
    <Copyright>Copyright Â© 2025 Jacob Mellor and IronSoftware. All rights reserved.</Copyright>

    <!-- Package Description -->
    <Title>CurlDotNet - Pure .NET curl | Sponsored by IronSoftware</Title>
    <Description>ðŸš€ THE KILLER FEATURE: Copy and paste any curl command - it just works!

CurlDotNet brings the power of curl to .NET. Simply paste any curl command string and execute it directly. No translation needed, no shell execution, pure .NET.

âœ¨ Key Features:
â€¢ Paste ANY curl command - works with or without "curl" prefix
â€¢ All 300+ curl options supported
â€¢ Stream-based for memory efficiency
â€¢ Perfect for CI/CD pipelines
â€¢ Every curl error code has its own exception type
â€¢ Middleware and DI support

ðŸ“¦ Supported Platforms:
â€¢ .NET 8.0 and .NET 6.0
â€¢ .NET Framework 4.7.2+ (Windows)
â€¢ .NET Standard 2.0 (maximum compatibility)
â€¢ Xamarin, Unity, Blazor

ðŸ’Ž Proudly sponsored by IronSoftware (ironsoftware.com), creators of IronPDF, IronOCR, IronXL, and IronBarcode.</Description>

    <!-- Package Tags -->
    <PackageTags>curl;http;https;ftp;rest;api;client;web;request;ironsoftware;command-line;wget;download;upload;cicd;automation;testing</PackageTags>

    <!-- License and Repository -->
    <PackageLicenseFile>COPYING</PackageLicenseFile>
    <RepositoryUrl>https://github.com/jacob/curl-dot-net</RepositoryUrl>
    <PackageProjectUrl>https://github.com/jacob/curl-dot-net</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>

    <!-- Package Icon and Release Notes -->
    <!-- <PackageIcon>icon.png</PackageIcon> -->
    <PackageReleaseNotes>Version 1.0.0 - Initial Release
ðŸš€ Killer Feature: Paste any curl command and it works!
âœ… All 300+ curl options supported
âœ… Stream-based for memory efficiency
âœ… Perfect IntelliSense with full documentation
âœ… Every curl error code has its own exception
âœ… Middleware and DI support
ðŸ’Ž Sponsored by IronSoftware

For full documentation and examples, visit https://github.com/jacob/curl-dot-net</PackageReleaseNotes>

    <!-- Output and Build -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <!-- Allow tests to access internals -->
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>CurlDotNet.Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="Ninject" Version="3.3.6" />
    <PackageReference Include="Ninject.Extensions.Factory" Version="3.3.3" />
    <PackageReference Include="System.Text.Json" Version="8.0.5" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <!-- Conditional package references for .NET Standard 2.0 -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\COPYING" Pack="true" PackagePath="\" />
    <None Include="..\..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Conditional package references for different target frameworks -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net48'">
    <Reference Include="System.Net.Http" />
  </ItemGroup>

</Project>